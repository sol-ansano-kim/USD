# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/Users/sol/dev/lib/USD/pxr/usdImaging/lib/usdviewq/mainWindowUI.ui'
#
# Created: Wed Dec  4 17:02:40 2019
#      by: pyside-uic 0.2.15 running on PySide 1.2.4
#
# WARNING! All changes made in this file will be lost!

from Qt import QtWidgets
from Qt import QtGui
from Qt import QtCore

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1145, 1002)
        MainWindow.setStyleSheet("")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStatusTip("")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.currentPathWidget = QtWidgets.QLineEdit(self.centralwidget)
        self.currentPathWidget.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.currentPathWidget.setObjectName("currentPathWidget")
        self.verticalLayout_4.addWidget(self.currentPathWidget)
        self.topBottomSplitter = QtWidgets.QSplitter(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.topBottomSplitter.sizePolicy().hasHeightForWidth())
        self.topBottomSplitter.setSizePolicy(sizePolicy)
        self.topBottomSplitter.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.topBottomSplitter.setFrameShadow(QtWidgets.QFrame.Plain)
        self.topBottomSplitter.setLineWidth(0)
        self.topBottomSplitter.setMidLineWidth(0)
        self.topBottomSplitter.setOrientation(QtCore.Qt.Vertical)
        self.topBottomSplitter.setObjectName("topBottomSplitter")
        self.primStageSplitter = QtWidgets.QSplitter(self.topBottomSplitter)
        self.primStageSplitter.setOrientation(QtCore.Qt.Horizontal)
        self.primStageSplitter.setObjectName("primStageSplitter")
        self.primFrame = QtWidgets.QFrame(self.primStageSplitter)
        self.primFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.primFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.primFrame.setLineWidth(0)
        self.primFrame.setObjectName("primFrame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.primFrame)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.primViewMenuBar = QtWidgets.QMenuBar()
        self.primViewMenuBar.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.primViewMenuBar.setNativeMenuBar(False)
        self.primViewMenuBar.setObjectName("primViewMenuBar")
        self.menuNavigation = QtWidgets.QMenu(self.primViewMenuBar)
        self.menuNavigation.setObjectName("menuNavigation")
        self.menuShow = QtWidgets.QMenu(self.primViewMenuBar)
        self.menuShow.setObjectName("menuShow")
        self.menuPrim_View_Depth = QtWidgets.QMenu(self.menuShow)
        self.menuPrim_View_Depth.setObjectName("menuPrim_View_Depth")
        self.verticalLayout_2.addWidget(self.primViewMenuBar)
        self.primView = PrimTreeWidget(self.primFrame)
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.primView.setFont(font)
        self.primView.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.primView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.primView.setFrameShadow(QtWidgets.QFrame.Plain)
        self.primView.setLineWidth(0)
        self.primView.setMidLineWidth(0)
        self.primView.setAlternatingRowColors(True)
        self.primView.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.primView.setUniformRowHeights(True)
        self.primView.setAllColumnsShowFocus(True)
        self.primView.setObjectName("primView")
        self.primView.header().setCascadingSectionResizes(True)
        self.primView.header().setDefaultSectionSize(150)
        self.primView.header().setMinimumSectionSize(20)
        self.primView.header().setStretchLastSection(False)
        self.verticalLayout_2.addWidget(self.primView)
        self.primLegendContainer = PrimLegend(self.primFrame)
        self.primLegendContainer.setObjectName("primLegendContainer")
        self.verticalLayout_2.addWidget(self.primLegendContainer)
        self.primFindContainer = QtWidgets.QHBoxLayout()
        self.primFindContainer.setContentsMargins(-1, 0, -1, -1)
        self.primFindContainer.setObjectName("primFindContainer")
        spacerItem = QtWidgets.QSpacerItem(5, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.primFindContainer.addItem(spacerItem)
        self.primLegendQButton = QtWidgets.QPushButton(self.primFrame)
        self.primLegendQButton.setMaximumSize(QtCore.QSize(32, 24))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(75)
        font.setBold(True)
        self.primLegendQButton.setFont(font)
        self.primLegendQButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.primLegendQButton.setIconSize(QtCore.QSize(12, 12))
        self.primLegendQButton.setObjectName("primLegendQButton")
        self.primFindContainer.addWidget(self.primLegendQButton)
        self.primViewLineEdit = QtWidgets.QLineEdit(self.primFrame)
        self.primViewLineEdit.setMaximumSize(QtCore.QSize(16777215, 24))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.primViewLineEdit.setFont(font)
        self.primViewLineEdit.setObjectName("primViewLineEdit")
        self.primFindContainer.addWidget(self.primViewLineEdit)
        self.primViewFindNext = QtWidgets.QPushButton(self.primFrame)
        self.primViewFindNext.setMaximumSize(QtCore.QSize(16777215, 24))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.primViewFindNext.setFont(font)
        self.primViewFindNext.setFocusPolicy(QtCore.Qt.NoFocus)
        self.primViewFindNext.setObjectName("primViewFindNext")
        self.primFindContainer.addWidget(self.primViewFindNext)
        spacerItem1 = QtWidgets.QSpacerItem(9, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.primFindContainer.addItem(spacerItem1)
        self.verticalLayout_2.addLayout(self.primFindContainer)
        self.glFrame = QtWidgets.QFrame(self.primStageSplitter)
        self.glFrame.setMinimumSize(QtCore.QSize(200, 0))
        self.glFrame.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.glFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.glFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.glFrame.setLineWidth(0)
        self.glFrame.setObjectName("glFrame")
        self.attribBrowserInspectorSplitter = QtWidgets.QSplitter(self.topBottomSplitter)
        self.attribBrowserInspectorSplitter.setOrientation(QtCore.Qt.Horizontal)
        self.attribBrowserInspectorSplitter.setObjectName("attribBrowserInspectorSplitter")
        self.attributeBrowserFrame = QtWidgets.QFrame(self.attribBrowserInspectorSplitter)
        self.attributeBrowserFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.attributeBrowserFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.attributeBrowserFrame.setLineWidth(0)
        self.attributeBrowserFrame.setObjectName("attributeBrowserFrame")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.attributeBrowserFrame)
        self.verticalLayout_7.setContentsMargins(2, 0, 0, 5)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.propertyView = QtWidgets.QTreeWidget(self.attributeBrowserFrame)
        self.propertyView.setToolTip("")
        self.propertyView.setStyleSheet("")
        self.propertyView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.propertyView.setFrameShadow(QtWidgets.QFrame.Plain)
        self.propertyView.setAlternatingRowColors(True)
        self.propertyView.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.propertyView.setColumnCount(3)
        self.propertyView.setObjectName("propertyView")
        self.verticalLayout_7.addWidget(self.propertyView)
        self.propertyLegendContainer = PropertyLegend(self.attributeBrowserFrame)
        self.propertyLegendContainer.setObjectName("propertyLegendContainer")
        self.verticalLayout_7.addWidget(self.propertyLegendContainer)
        self.propertyFindContainer = QtWidgets.QHBoxLayout()
        self.propertyFindContainer.setContentsMargins(5, -1, 5, -1)
        self.propertyFindContainer.setObjectName("propertyFindContainer")
        self.propertyLegendQButton = QtWidgets.QPushButton(self.attributeBrowserFrame)
        self.propertyLegendQButton.setMaximumSize(QtCore.QSize(32, 24))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.propertyLegendQButton.setFont(font)
        self.propertyLegendQButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.propertyLegendQButton.setIconSize(QtCore.QSize(12, 12))
        self.propertyLegendQButton.setObjectName("propertyLegendQButton")
        self.propertyFindContainer.addWidget(self.propertyLegendQButton)
        self.attrViewLineEdit = QtWidgets.QLineEdit(self.attributeBrowserFrame)
        self.attrViewLineEdit.setMaximumSize(QtCore.QSize(16777215, 24))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.attrViewLineEdit.setFont(font)
        self.attrViewLineEdit.setObjectName("attrViewLineEdit")
        self.propertyFindContainer.addWidget(self.attrViewLineEdit)
        self.attrViewFindNext = QtWidgets.QPushButton(self.attributeBrowserFrame)
        self.attrViewFindNext.setMaximumSize(QtCore.QSize(16777215, 24))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.attrViewFindNext.setFont(font)
        self.attrViewFindNext.setFocusPolicy(QtCore.Qt.NoFocus)
        self.attrViewFindNext.setIconSize(QtCore.QSize(24, 24))
        self.attrViewFindNext.setObjectName("attrViewFindNext")
        self.propertyFindContainer.addWidget(self.attrViewFindNext)
        self.verticalLayout_7.addLayout(self.propertyFindContainer)
        self.propertyInspectorFrame = QtWidgets.QFrame(self.attribBrowserInspectorSplitter)
        self.propertyInspectorFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.propertyInspectorFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.propertyInspectorFrame.setLineWidth(0)
        self.propertyInspectorFrame.setObjectName("propertyInspectorFrame")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.propertyInspectorFrame)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setContentsMargins(0, 1, 2, 2)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.propertyInspectorContainer = QtWidgets.QFrame(self.propertyInspectorFrame)
        self.propertyInspectorContainer.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.propertyInspectorContainer.setFrameShadow(QtWidgets.QFrame.Plain)
        self.propertyInspectorContainer.setObjectName("propertyInspectorContainer")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.propertyInspectorContainer)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.propertyInspector = QtWidgets.QTabWidget(self.propertyInspectorContainer)
        self.propertyInspector.setObjectName("propertyInspector")
        self.value = QtWidgets.QWidget()
        self.value.setObjectName("value")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.value)
        self.verticalLayout.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.attributeValueEditor = AttributeValueEditor(self.value)
        self.attributeValueEditor.setObjectName("attributeValueEditor")
        self.verticalLayout.addWidget(self.attributeValueEditor)
        self.propertyInspector.addTab(self.value, "")
        self.metadata = QtWidgets.QWidget()
        self.metadata.setObjectName("metadata")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.metadata)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.attributeBrowserFrame1 = QtWidgets.QFrame(self.metadata)
        self.attributeBrowserFrame1.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.attributeBrowserFrame1.setFrameShadow(QtWidgets.QFrame.Plain)
        self.attributeBrowserFrame1.setLineWidth(0)
        self.attributeBrowserFrame1.setObjectName("attributeBrowserFrame1")
        self.verticalLayout_71 = QtWidgets.QVBoxLayout(self.attributeBrowserFrame1)
        self.verticalLayout_71.setContentsMargins(2, 0, 0, 5)
        self.verticalLayout_71.setObjectName("verticalLayout_71")
        self.metadataView = QtWidgets.QTableWidget(self.attributeBrowserFrame1)
        self.metadataView.setToolTip("")
        self.metadataView.setStyleSheet("")
        self.metadataView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.metadataView.setFrameShadow(QtWidgets.QFrame.Plain)
        self.metadataView.setLineWidth(0)
        self.metadataView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.metadataView.setAlternatingRowColors(True)
        self.metadataView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.metadataView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.metadataView.setShowGrid(False)
        self.metadataView.setGridStyle(QtCore.Qt.SolidLine)
        self.metadataView.setColumnCount(2)
        self.metadataView.setObjectName("metadataView")
        self.metadataView.setColumnCount(2)
        self.metadataView.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.metadataView.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.metadataView.setHorizontalHeaderItem(1, item)
        self.metadataView.horizontalHeader().setCascadingSectionResizes(True)
        self.metadataView.horizontalHeader().setDefaultSectionSize(220)
        self.metadataView.horizontalHeader().setMinimumSectionSize(30)
        self.metadataView.horizontalHeader().setSortIndicatorShown(False)
        self.metadataView.horizontalHeader().setStretchLastSection(True)
        self.metadataView.verticalHeader().setVisible(False)
        self.metadataView.verticalHeader().setDefaultSectionSize(30)
        self.metadataView.verticalHeader().setMinimumSectionSize(20)
        self.metadataView.verticalHeader().setStretchLastSection(False)
        self.verticalLayout_71.addWidget(self.metadataView)
        self.horizontalLayout.addWidget(self.attributeBrowserFrame1)
        self.propertyInspector.addTab(self.metadata, "")
        self.layerstack = QtWidgets.QWidget()
        self.layerstack.setObjectName("layerstack")
        self.layerStackFrameLayout = QtWidgets.QHBoxLayout(self.layerstack)
        self.layerStackFrameLayout.setObjectName("layerStackFrameLayout")
        self.layerStackFrame = QtWidgets.QFrame(self.layerstack)
        self.layerStackFrame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.layerStackFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.layerStackFrame.setLineWidth(0)
        self.layerStackFrame.setObjectName("layerStackFrame")
        self.layerStackViewLayout = QtWidgets.QVBoxLayout(self.layerStackFrame)
        self.layerStackViewLayout.setContentsMargins(2, 0, 0, 5)
        self.layerStackViewLayout.setObjectName("layerStackViewLayout")
        self.layerStackView = QtWidgets.QTableWidget(self.layerStackFrame)
        self.layerStackView.setToolTip("")
        self.layerStackView.setStyleSheet("")
        self.layerStackView.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.layerStackView.setFrameShadow(QtWidgets.QFrame.Plain)
        self.layerStackView.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.layerStackView.setAlternatingRowColors(True)
        self.layerStackView.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.layerStackView.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.layerStackView.setShowGrid(False)
        self.layerStackView.setGridStyle(QtCore.Qt.SolidLine)
        self.layerStackView.setColumnCount(3)
        self.layerStackView.setObjectName("layerStackView")
        self.layerStackView.setColumnCount(3)
        self.layerStackView.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.layerStackView.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.layerStackView.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.layerStackView.setHorizontalHeaderItem(2, item)
        self.layerStackView.horizontalHeader().setCascadingSectionResizes(True)
        self.layerStackView.horizontalHeader().setDefaultSectionSize(220)
        self.layerStackView.horizontalHeader().setMinimumSectionSize(30)
        self.layerStackView.horizontalHeader().setSortIndicatorShown(False)
        self.layerStackView.horizontalHeader().setStretchLastSection(True)
        self.layerStackView.verticalHeader().setVisible(False)
        self.layerStackView.verticalHeader().setDefaultSectionSize(30)
        self.layerStackView.verticalHeader().setMinimumSectionSize(20)
        self.layerStackView.verticalHeader().setStretchLastSection(False)
        self.layerStackViewLayout.addWidget(self.layerStackView)
        self.layerStackFrameLayout.addWidget(self.layerStackFrame)
        self.propertyInspector.addTab(self.layerstack, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.tab)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.compositionTreeWidget = QtWidgets.QTreeWidget(self.tab)
        self.compositionTreeWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.compositionTreeWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.compositionTreeWidget.setAlternatingRowColors(True)
        self.compositionTreeWidget.setIndentation(15)
        self.compositionTreeWidget.setObjectName("compositionTreeWidget")
        self.compositionTreeWidget.header().setHighlightSections(False)
        self.compositionTreeWidget.header().setStretchLastSection(False)
        self.horizontalLayout_4.addWidget(self.compositionTreeWidget)
        self.propertyInspector.addTab(self.tab, "")
        self.verticalLayout_3.addWidget(self.propertyInspector)
        self.verticalLayout_8.addWidget(self.propertyInspectorContainer)
        self.verticalLayout_4.addWidget(self.topBottomSplitter)
        self.frameChangeContainer = QtWidgets.QHBoxLayout()
        self.frameChangeContainer.setObjectName("frameChangeContainer")
        self.sliderContainer = QtWidgets.QVBoxLayout()
        self.sliderContainer.setObjectName("sliderContainer")
        self.sliderTopContainer = QtWidgets.QHBoxLayout()
        self.sliderTopContainer.setObjectName("sliderTopContainer")
        self.stageBegin = QtWidgets.QLabel(self.centralwidget)
        self.stageBegin.setMaximumSize(QtCore.QSize(60, 18))
        self.stageBegin.setObjectName("stageBegin")
        self.sliderTopContainer.addWidget(self.stageBegin)
        self.rangeBegin = QtWidgets.QLineEdit(self.centralwidget)
        self.rangeBegin.setMaximumSize(QtCore.QSize(60, 18))
        self.rangeBegin.setObjectName("rangeBegin")
        self.sliderTopContainer.addWidget(self.rangeBegin)
        self.frameSlider = FrameSlider(self.centralwidget)
        self.frameSlider.setMinimumSize(QtCore.QSize(90, 45))
        self.frameSlider.setPageStep(0)
        self.frameSlider.setOrientation(QtCore.Qt.Horizontal)
        self.frameSlider.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.frameSlider.setTickInterval(0)
        self.frameSlider.setObjectName("frameSlider")
        self.sliderTopContainer.addWidget(self.frameSlider)
        self.rangeEnd = QtWidgets.QLineEdit(self.centralwidget)
        self.rangeEnd.setMaximumSize(QtCore.QSize(60, 18))
        self.rangeEnd.setObjectName("rangeEnd")
        self.sliderTopContainer.addWidget(self.rangeEnd)
        self.stageEnd = QtWidgets.QLabel(self.centralwidget)
        self.stageEnd.setMaximumSize(QtCore.QSize(60, 18))
        self.stageEnd.setObjectName("stageEnd")
        self.sliderTopContainer.addWidget(self.stageEnd)
        self.sliderContainer.addLayout(self.sliderTopContainer)
        self.sliderBottomContainer = QtWidgets.QHBoxLayout()
        self.sliderBottomContainer.setSpacing(6)
        self.sliderBottomContainer.setObjectName("sliderBottomContainer")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.sliderBottomContainer.addItem(spacerItem2)
        self.redrawOnScrub = QtWidgets.QCheckBox(self.centralwidget)
        self.redrawOnScrub.setMaximumSize(QtCore.QSize(200, 16777215))
        self.redrawOnScrub.setFocusPolicy(QtCore.Qt.NoFocus)
        self.redrawOnScrub.setChecked(True)
        self.redrawOnScrub.setObjectName("redrawOnScrub")
        self.sliderBottomContainer.addWidget(self.redrawOnScrub)
        spacerItem3 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.sliderBottomContainer.addItem(spacerItem3)
        self.stepSizeLabel = QtWidgets.QLabel(self.centralwidget)
        self.stepSizeLabel.setObjectName("stepSizeLabel")
        self.sliderBottomContainer.addWidget(self.stepSizeLabel)
        self.stepSize = QtWidgets.QLineEdit(self.centralwidget)
        self.stepSize.setEnabled(True)
        self.stepSize.setMaximumSize(QtCore.QSize(50, 16777215))
        self.stepSize.setAlignment(QtCore.Qt.AlignCenter)
        self.stepSize.setObjectName("stepSize")
        self.sliderBottomContainer.addWidget(self.stepSize)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.sliderBottomContainer.addItem(spacerItem4)
        self.sliderContainer.addLayout(self.sliderBottomContainer)
        self.frameChangeContainer.addLayout(self.sliderContainer)
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.frameChangeContainer.addWidget(self.line)
        self.playContainer = QtWidgets.QVBoxLayout()
        self.playContainer.setObjectName("playContainer")
        self.playButton = QtWidgets.QPushButton(self.centralwidget)
        self.playButton.setMaximumSize(QtCore.QSize(115, 16777215))
        self.playButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.playButton.setObjectName("playButton")
        self.playContainer.addWidget(self.playButton)
        self.frameContainer = QtWidgets.QHBoxLayout()
        self.frameContainer.setObjectName("frameContainer")
        self.frameLabel = QtWidgets.QLabel(self.centralwidget)
        self.frameLabel.setMaximumSize(QtCore.QSize(50, 16777215))
        self.frameLabel.setObjectName("frameLabel")
        self.frameContainer.addWidget(self.frameLabel)
        self.frameField = QtWidgets.QLineEdit(self.centralwidget)
        self.frameField.setMaximumSize(QtCore.QSize(80, 20))
        font = QtGui.QFont()
        font.setFamily("Gotham Rounded")
        font.setPointSize(9)
        font.setWeight(50)
        font.setItalic(False)
        font.setBold(False)
        self.frameField.setFont(font)
        self.frameField.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.frameField.setObjectName("frameField")
        self.frameContainer.addWidget(self.frameField)
        self.playContainer.addLayout(self.frameContainer)
        self.frameChangeContainer.addLayout(self.playContainer)
        self.verticalLayout_4.addLayout(self.frameChangeContainer)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar()
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1145, 30))
        self.menubar.setMinimumSize(QtCore.QSize(0, 0))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuInterpolation = QtWidgets.QMenu(self.menuEdit)
        self.menuInterpolation.setObjectName("menuInterpolation")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setProperty("toolTipsVisible", True)
        self.menuView.setObjectName("menuView")
        self.menuHUD = QtWidgets.QMenu(self.menuView)
        self.menuHUD.setObjectName("menuHUD")
        self.menuPickMode = QtWidgets.QMenu(self.menuView)
        self.menuPickMode.setObjectName("menuPickMode")
        self.menuSelection_Highlighting = QtWidgets.QMenu(self.menuView)
        self.menuSelection_Highlighting.setObjectName("menuSelection_Highlighting")
        self.menuHighlightColor = QtWidgets.QMenu(self.menuSelection_Highlighting)
        self.menuHighlightColor.setObjectName("menuHighlightColor")
        self.menuLights = QtWidgets.QMenu(self.menuView)
        self.menuLights.setEnabled(True)
        self.menuLights.setObjectName("menuLights")
        self.menuShading_Mode = QtWidgets.QMenu(self.menuView)
        self.menuShading_Mode.setObjectName("menuShading_Mode")
        self.menuColorCorrection = QtWidgets.QMenu(self.menuView)
        self.menuColorCorrection.setObjectName("menuColorCorrection")
        self.menuBackground_Color = QtWidgets.QMenu(self.menuView)
        self.menuBackground_Color.setObjectName("menuBackground_Color")
        self.menuCamera = QtWidgets.QMenu(self.menuView)
        self.menuCamera.setTearOffEnabled(True)
        self.menuCamera.setObjectName("menuCamera")
        self.menuCameraGuides = QtWidgets.QMenu(self.menuView)
        self.menuCameraGuides.setTearOffEnabled(True)
        self.menuCameraGuides.setObjectName("menuCameraGuides")
        self.menuCamera_Masking = QtWidgets.QMenu(self.menuCameraGuides)
        self.menuCamera_Masking.setObjectName("menuCamera_Masking")
        self.menuCamera_Reticles = QtWidgets.QMenu(self.menuCameraGuides)
        self.menuCamera_Reticles.setObjectName("menuCamera_Reticles")
        self.menuDisplay = QtWidgets.QMenu(self.menuView)
        self.menuDisplay.setObjectName("menuDisplay")
        self.menuBBox = QtWidgets.QMenu(self.menuView)
        self.menuBBox.setObjectName("menuBBox")
        self.menuRendererPlugin = QtWidgets.QMenu(self.menuView)
        self.menuRendererPlugin.setObjectName("menuRendererPlugin")
        self.menuRendererSettings = QtWidgets.QMenu(self.menuView)
        self.menuRendererSettings.setObjectName("menuRendererSettings")
        self.menuRendererAovs = QtWidgets.QMenu(self.menuView)
        self.menuRendererAovs.setObjectName("menuRendererAovs")
        self.menuComplexity = QtWidgets.QMenu(self.menuView)
        self.menuComplexity.setObjectName("menuComplexity")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setMinimumSize(QtCore.QSize(0, 0))
        self.menuWindow.setObjectName("menuWindow")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setSizeGripEnabled(True)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionOpen.setObjectName("actionOpen")
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionQuit.setObjectName("actionQuit")
        self.actionPause = QtWidgets.QAction(MainWindow)
        self.actionPause.setCheckable(True)
        self.actionPause.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionPause.setObjectName("actionPause")
        self.actionReset_View = QtWidgets.QAction(MainWindow)
        self.actionReset_View.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionReset_View.setObjectName("actionReset_View")
        self.actionToggle_Framed_View = QtWidgets.QAction(MainWindow)
        self.actionToggle_Framed_View.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionToggle_Framed_View.setObjectName("actionToggle_Framed_View")
        self.actionWatch_Window = QtWidgets.QAction(MainWindow)
        self.actionWatch_Window.setCheckable(True)
        self.actionWatch_Window.setEnabled(False)
        self.actionWatch_Window.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionWatch_Window.setObjectName("actionWatch_Window")
        self.actionFrame_Forward = QtWidgets.QAction(MainWindow)
        self.actionFrame_Forward.setObjectName("actionFrame_Forward")
        self.actionFrame_Backwards = QtWidgets.QAction(MainWindow)
        self.actionFrame_Backwards.setObjectName("actionFrame_Backwards")
        self.actionAdjust_FOV = QtWidgets.QAction(MainWindow)
        self.actionAdjust_FOV.setShortcut("")
        self.actionAdjust_FOV.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionAdjust_FOV.setObjectName("actionAdjust_FOV")
        self.actionReopen_Stage = QtWidgets.QAction(MainWindow)
        self.actionReopen_Stage.setObjectName("actionReopen_Stage")
        self.actionDump_RIB = QtWidgets.QAction(MainWindow)
        self.actionDump_RIB.setObjectName("actionDump_RIB")
        self.actionLevel_1 = QtWidgets.QAction(MainWindow)
        self.actionLevel_1.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_1.setObjectName("actionLevel_1")
        self.actionLevel_2 = QtWidgets.QAction(MainWindow)
        self.actionLevel_2.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_2.setObjectName("actionLevel_2")
        self.actionLevel_3 = QtWidgets.QAction(MainWindow)
        self.actionLevel_3.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_3.setObjectName("actionLevel_3")
        self.actionLevel_4 = QtWidgets.QAction(MainWindow)
        self.actionLevel_4.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_4.setObjectName("actionLevel_4")
        self.actionLevel_5 = QtWidgets.QAction(MainWindow)
        self.actionLevel_5.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_5.setObjectName("actionLevel_5")
        self.actionExpand_All = QtWidgets.QAction(MainWindow)
        self.actionExpand_All.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionExpand_All.setObjectName("actionExpand_All")
        self.actionCollapse_All = QtWidgets.QAction(MainWindow)
        self.actionCollapse_All.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionCollapse_All.setObjectName("actionCollapse_All")
        self.actionAmbient_Only = QtWidgets.QAction(MainWindow)
        self.actionAmbient_Only.setCheckable(True)
        self.actionAmbient_Only.setChecked(True)
        self.actionAmbient_Only.setObjectName("actionAmbient_Only")
        self.actionDomeLight = QtWidgets.QAction(MainWindow)
        self.actionDomeLight.setCheckable(True)
        self.actionDomeLight.setChecked(True)
        self.actionDomeLight.setObjectName("actionDomeLight")
        self.actionLevel_6 = QtWidgets.QAction(MainWindow)
        self.actionLevel_6.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_6.setObjectName("actionLevel_6")
        self.actionLevel_7 = QtWidgets.QAction(MainWindow)
        self.actionLevel_7.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_7.setObjectName("actionLevel_7")
        self.actionLevel_8 = QtWidgets.QAction(MainWindow)
        self.actionLevel_8.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionLevel_8.setObjectName("actionLevel_8")
        self.actionWireframe = QtWidgets.QAction(MainWindow)
        self.actionWireframe.setCheckable(True)
        self.actionWireframe.setChecked(False)
        self.actionWireframe.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionWireframe.setObjectName("actionWireframe")
        self.actionWireframeOnSurface = QtWidgets.QAction(MainWindow)
        self.actionWireframeOnSurface.setCheckable(True)
        self.actionWireframeOnSurface.setChecked(False)
        self.actionWireframeOnSurface.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionWireframeOnSurface.setObjectName("actionWireframeOnSurface")
        self.actionSmooth_Shaded = QtWidgets.QAction(MainWindow)
        self.actionSmooth_Shaded.setCheckable(True)
        self.actionSmooth_Shaded.setChecked(True)
        self.actionSmooth_Shaded.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionSmooth_Shaded.setObjectName("actionSmooth_Shaded")
        self.actionFlat_Shaded = QtWidgets.QAction(MainWindow)
        self.actionFlat_Shaded.setCheckable(True)
        self.actionFlat_Shaded.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionFlat_Shaded.setObjectName("actionFlat_Shaded")
        self.actionPoints = QtWidgets.QAction(MainWindow)
        self.actionPoints.setCheckable(True)
        self.actionPoints.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionPoints.setObjectName("actionPoints")
        self.actionGeom_Only = QtWidgets.QAction(MainWindow)
        self.actionGeom_Only.setCheckable(True)
        self.actionGeom_Only.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionGeom_Only.setObjectName("actionGeom_Only")
        self.actionRedrawOnScrub = QtWidgets.QAction(MainWindow)
        self.actionRedrawOnScrub.setCheckable(True)
        self.actionRedrawOnScrub.setChecked(True)
        self.actionRedrawOnScrub.setObjectName("actionRedrawOnScrub")
        self.actionIncrementComplexity1 = QtWidgets.QAction(MainWindow)
        self.actionIncrementComplexity1.setObjectName("actionIncrementComplexity1")
        self.actionDecrementComplexity = QtWidgets.QAction(MainWindow)
        self.actionDecrementComplexity.setObjectName("actionDecrementComplexity")
        self.actionPRMan = QtWidgets.QAction(MainWindow)
        self.actionPRMan.setAutoRepeat(False)
        self.actionPRMan.setObjectName("actionPRMan")
        self.actionBlack = QtWidgets.QAction(MainWindow)
        self.actionBlack.setCheckable(True)
        self.actionBlack.setChecked(False)
        self.actionBlack.setStatusTip("")
        self.actionBlack.setObjectName("actionBlack")
        self.actionWhite = QtWidgets.QAction(MainWindow)
        self.actionWhite.setCheckable(True)
        self.actionWhite.setStatusTip("")
        self.actionWhite.setObjectName("actionWhite")
        self.actionGrey_Light = QtWidgets.QAction(MainWindow)
        self.actionGrey_Light.setCheckable(True)
        self.actionGrey_Light.setStatusTip("")
        self.actionGrey_Light.setObjectName("actionGrey_Light")
        self.actionGrey_Dark = QtWidgets.QAction(MainWindow)
        self.actionGrey_Dark.setCheckable(True)
        self.actionGrey_Dark.setChecked(True)
        self.actionGrey_Dark.setStatusTip("")
        self.actionGrey_Dark.setObjectName("actionGrey_Dark")
        self.actionGeom_Smooth = QtWidgets.QAction(MainWindow)
        self.actionGeom_Smooth.setCheckable(True)
        self.actionGeom_Smooth.setObjectName("actionGeom_Smooth")
        self.actionGeom_Flat = QtWidgets.QAction(MainWindow)
        self.actionGeom_Flat.setCheckable(True)
        self.actionGeom_Flat.setObjectName("actionGeom_Flat")
        self.actionHidden_Surface_Wireframe = QtWidgets.QAction(MainWindow)
        self.actionHidden_Surface_Wireframe.setCheckable(True)
        self.actionHidden_Surface_Wireframe.setChecked(False)
        self.actionHidden_Surface_Wireframe.setObjectName("actionHidden_Surface_Wireframe")
        self.actionNoColorCorrection = QtWidgets.QAction(MainWindow)
        self.actionNoColorCorrection.setCheckable(True)
        self.actionNoColorCorrection.setChecked(False)
        self.actionNoColorCorrection.setObjectName("actionNoColorCorrection")
        self.actionSRGBColorCorrection = QtWidgets.QAction(MainWindow)
        self.actionSRGBColorCorrection.setCheckable(True)
        self.actionSRGBColorCorrection.setChecked(True)
        self.actionSRGBColorCorrection.setObjectName("actionSRGBColorCorrection")
        self.actionOpenColorIO = QtWidgets.QAction(MainWindow)
        self.actionOpenColorIO.setCheckable(True)
        self.actionOpenColorIO.setChecked(False)
        self.actionOpenColorIO.setObjectName("actionOpenColorIO")
        self.actionFreeCam = QtWidgets.QAction(MainWindow)
        self.actionFreeCam.setCheckable(True)
        self.actionFreeCam.setChecked(True)
        self.actionFreeCam.setObjectName("actionFreeCam")
        self.actionSave_Overrides_As = QtWidgets.QAction(MainWindow)
        self.actionSave_Overrides_As.setEnabled(True)
        self.actionSave_Overrides_As.setObjectName("actionSave_Overrides_As")
        self.actionSave_Flattened_As = QtWidgets.QAction(MainWindow)
        self.actionSave_Flattened_As.setEnabled(True)
        self.actionSave_Flattened_As.setObjectName("actionSave_Flattened_As")
        self.showInterpreter = QtWidgets.QAction(MainWindow)
        self.showInterpreter.setCheckable(False)
        self.showInterpreter.setObjectName("showInterpreter")
        self.showDebugFlags = QtWidgets.QAction(MainWindow)
        self.showDebugFlags.setCheckable(False)
        self.showDebugFlags.setObjectName("showDebugFlags")
        self.actionHUD_VBOInfo = QtWidgets.QAction(MainWindow)
        self.actionHUD_VBOInfo.setCheckable(True)
        self.actionHUD_VBOInfo.setChecked(True)
        self.actionHUD_VBOInfo.setObjectName("actionHUD_VBOInfo")
        self.actionHUD_Info = QtWidgets.QAction(MainWindow)
        self.actionHUD_Info.setCheckable(True)
        self.actionHUD_Info.setChecked(True)
        self.actionHUD_Info.setObjectName("actionHUD_Info")
        self.actionHUD_VBO = QtWidgets.QAction(MainWindow)
        self.actionHUD_VBO.setCheckable(True)
        self.actionHUD_VBO.setChecked(True)
        self.actionHUD_VBO.setObjectName("actionHUD_VBO")
        self.actionHUD_Complexity = QtWidgets.QAction(MainWindow)
        self.actionHUD_Complexity.setCheckable(True)
        self.actionHUD_Complexity.setChecked(True)
        self.actionHUD_Complexity.setObjectName("actionHUD_Complexity")
        self.actionHUD_Performance = QtWidgets.QAction(MainWindow)
        self.actionHUD_Performance.setCheckable(True)
        self.actionHUD_Performance.setChecked(True)
        self.actionHUD_Performance.setObjectName("actionHUD_Performance")
        self.actionHUD_GPUstats = QtWidgets.QAction(MainWindow)
        self.actionHUD_GPUstats.setCheckable(True)
        self.actionHUD_GPUstats.setChecked(False)
        self.actionHUD_GPUstats.setObjectName("actionHUD_GPUstats")
        self.actionHUD = QtWidgets.QAction(MainWindow)
        self.actionHUD.setCheckable(True)
        self.actionHUD.setChecked(True)
        self.actionHUD.setObjectName("actionHUD")
        self.actionCameraMask_Outline = QtWidgets.QAction(MainWindow)
        self.actionCameraMask_Outline.setCheckable(True)
        self.actionCameraMask_Outline.setChecked(False)
        self.actionCameraMask_Outline.setObjectName("actionCameraMask_Outline")
        self.actionDisplay_Guide = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Guide.setCheckable(True)
        self.actionDisplay_Guide.setObjectName("actionDisplay_Guide")
        self.actionDisplay_Render = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Render.setCheckable(True)
        self.actionDisplay_Render.setObjectName("actionDisplay_Render")
        self.actionDisplay_PrimId = QtWidgets.QAction(MainWindow)
        self.actionDisplay_PrimId.setCheckable(True)
        self.actionDisplay_PrimId.setObjectName("actionDisplay_PrimId")
        self.actionEnable_Scene_Materials = QtWidgets.QAction(MainWindow)
        self.actionEnable_Scene_Materials.setCheckable(True)
        self.actionEnable_Scene_Materials.setChecked(True)
        self.actionEnable_Scene_Materials.setObjectName("actionEnable_Scene_Materials")
        self.actionShow_Inactive_Prims = QtWidgets.QAction(MainWindow)
        self.actionShow_Inactive_Prims.setCheckable(True)
        self.actionShow_Inactive_Prims.setObjectName("actionShow_Inactive_Prims")
        self.showAABBox = QtWidgets.QAction(MainWindow)
        self.showAABBox.setCheckable(True)
        self.showAABBox.setChecked(True)
        self.showAABBox.setObjectName("showAABBox")
        self.showOBBox = QtWidgets.QAction(MainWindow)
        self.showOBBox.setCheckable(True)
        self.showOBBox.setObjectName("showOBBox")
        self.showBBoxPlayback = QtWidgets.QAction(MainWindow)
        self.showBBoxPlayback.setCheckable(True)
        self.showBBoxPlayback.setObjectName("showBBoxPlayback")
        self.showBBoxes = QtWidgets.QAction(MainWindow)
        self.showBBoxes.setCheckable(True)
        self.showBBoxes.setChecked(True)
        self.showBBoxes.setEnabled(True)
        self.showBBoxes.setObjectName("showBBoxes")
        self.actionVersion_Info = QtWidgets.QAction(MainWindow)
        self.actionVersion_Info.setCheckable(True)
        self.actionVersion_Info.setShortcutContext(QtCore.Qt.ApplicationShortcut)
        self.actionVersion_Info.setObjectName("actionVersion_Info")
        self.actionAdjust_Clipping = QtWidgets.QAction(MainWindow)
        self.actionAdjust_Clipping.setCheckable(True)
        self.actionAdjust_Clipping.setObjectName("actionAdjust_Clipping")
        self.actionIncrementComplexity2 = QtWidgets.QAction(MainWindow)
        self.actionIncrementComplexity2.setObjectName("actionIncrementComplexity2")
        self.actionCull_Backfaces = QtWidgets.QAction(MainWindow)
        self.actionCull_Backfaces.setCheckable(True)
        self.actionCull_Backfaces.setChecked(True)
        self.actionCull_Backfaces.setObjectName("actionCull_Backfaces")
        self.actionSave_Overrides_To_Scene = QtWidgets.QAction(MainWindow)
        self.actionSave_Overrides_To_Scene.setEnabled(False)
        self.actionSave_Overrides_To_Scene.setVisible(False)
        self.actionSave_Overrides_To_Scene.setObjectName("actionSave_Overrides_To_Scene")
        self.actionMake_Visible = QtWidgets.QAction(MainWindow)
        self.actionMake_Visible.setObjectName("actionMake_Visible")
        self.actionMake_Invisible = QtWidgets.QAction(MainWindow)
        self.actionMake_Invisible.setObjectName("actionMake_Invisible")
        self.actionRemove_Session_Visibility = QtWidgets.QAction(MainWindow)
        self.actionRemove_Session_Visibility.setObjectName("actionRemove_Session_Visibility")
        self.actionActivate = QtWidgets.QAction(MainWindow)
        self.actionActivate.setObjectName("actionActivate")
        self.actionDeactivate = QtWidgets.QAction(MainWindow)
        self.actionDeactivate.setObjectName("actionDeactivate")
        self.actionSelect_Model_Root = QtWidgets.QAction(MainWindow)
        self.actionSelect_Model_Root.setEnabled(True)
        self.actionSelect_Model_Root.setObjectName("actionSelect_Model_Root")
        self.actionRefresh_Procedurals = QtWidgets.QAction(MainWindow)
        self.actionRefresh_Procedurals.setObjectName("actionRefresh_Procedurals")
        self.actionReload_All_Layers = QtWidgets.QAction(MainWindow)
        self.actionReload_All_Layers.setObjectName("actionReload_All_Layers")
        self.actionHD_Flags = QtWidgets.QAction(MainWindow)
        self.actionHD_Flags.setObjectName("actionHD_Flags")
        self.actionHD_Flags_2 = QtWidgets.QAction(MainWindow)
        self.actionHD_Flags_2.setObjectName("actionHD_Flags_2")
        self.actionHD_Flags_3 = QtWidgets.QAction(MainWindow)
        self.actionHD_Flags_3.setObjectName("actionHD_Flags_3")
        self.actionMenu = QtWidgets.QAction(MainWindow)
        self.actionMenu.setObjectName("actionMenu")
        self.actionSdf = QtWidgets.QAction(MainWindow)
        self.actionSdf.setObjectName("actionSdf")
        self.actionGeom_Id = QtWidgets.QAction(MainWindow)
        self.actionGeom_Id.setObjectName("actionGeom_Id")
        self.actionShow_All_Master_Prims = QtWidgets.QAction(MainWindow)
        self.actionShow_All_Master_Prims.setCheckable(True)
        self.actionShow_All_Master_Prims.setObjectName("actionShow_All_Master_Prims")
        self.actionShow_Undefined_Prims = QtWidgets.QAction(MainWindow)
        self.actionShow_Undefined_Prims.setCheckable(True)
        self.actionShow_Undefined_Prims.setObjectName("actionShow_Undefined_Prims")
        self.actionShow_Abstract_Prims = QtWidgets.QAction(MainWindow)
        self.actionShow_Abstract_Prims.setCheckable(True)
        self.actionShow_Abstract_Prims.setObjectName("actionShow_Abstract_Prims")
        self.actionPick_Prims = QtWidgets.QAction(MainWindow)
        self.actionPick_Prims.setCheckable(True)
        self.actionPick_Prims.setObjectName("actionPick_Prims")
        self.actionPick_Models = QtWidgets.QAction(MainWindow)
        self.actionPick_Models.setCheckable(True)
        self.actionPick_Models.setObjectName("actionPick_Models")
        self.actionPick_Instances = QtWidgets.QAction(MainWindow)
        self.actionPick_Instances.setCheckable(True)
        self.actionPick_Instances.setObjectName("actionPick_Instances")
        self.actionToggle_Viewer_Mode = QtWidgets.QAction(MainWindow)
        self.actionToggle_Viewer_Mode.setObjectName("actionToggle_Viewer_Mode")
        self.useExtentsHint = QtWidgets.QAction(MainWindow)
        self.useExtentsHint.setCheckable(True)
        self.useExtentsHint.setChecked(True)
        self.useExtentsHint.setObjectName("useExtentsHint")
        self.actionNever = QtWidgets.QAction(MainWindow)
        self.actionNever.setCheckable(True)
        self.actionNever.setObjectName("actionNever")
        self.actionOnly_when_paused = QtWidgets.QAction(MainWindow)
        self.actionOnly_when_paused.setCheckable(True)
        self.actionOnly_when_paused.setChecked(True)
        self.actionOnly_when_paused.setObjectName("actionOnly_when_paused")
        self.actionAlways = QtWidgets.QAction(MainWindow)
        self.actionAlways.setCheckable(True)
        self.actionAlways.setObjectName("actionAlways")
        self.actionSelYellow = QtWidgets.QAction(MainWindow)
        self.actionSelYellow.setCheckable(True)
        self.actionSelYellow.setChecked(True)
        self.actionSelYellow.setObjectName("actionSelYellow")
        self.actionSelWhite = QtWidgets.QAction(MainWindow)
        self.actionSelWhite.setCheckable(True)
        self.actionSelWhite.setObjectName("actionSelWhite")
        self.actionSelCyan = QtWidgets.QAction(MainWindow)
        self.actionSelCyan.setCheckable(True)
        self.actionSelCyan.setObjectName("actionSelCyan")
        self.actionVis_Only = QtWidgets.QAction(MainWindow)
        self.actionVis_Only.setObjectName("actionVis_Only")
        self.actionReset_All_Session_Visibility = QtWidgets.QAction(MainWindow)
        self.actionReset_All_Session_Visibility.setObjectName("actionReset_All_Session_Visibility")
        self.actionLoad = QtWidgets.QAction(MainWindow)
        self.actionLoad.setObjectName("actionLoad")
        self.actionUnload = QtWidgets.QAction(MainWindow)
        self.actionUnload.setObjectName("actionUnload")
        self.actionSelect_Bound_Preview_Material = QtWidgets.QAction(MainWindow)
        self.actionSelect_Bound_Preview_Material.setObjectName("actionSelect_Bound_Preview_Material")
        self.actionRollover_Prim_Info = QtWidgets.QAction(MainWindow)
        self.actionRollover_Prim_Info.setCheckable(True)
        self.actionRollover_Prim_Info.setObjectName("actionRollover_Prim_Info")
        self.actionAuto_Compute_Clipping_Planes = QtWidgets.QAction(MainWindow)
        self.actionAuto_Compute_Clipping_Planes.setCheckable(True)
        self.actionAuto_Compute_Clipping_Planes.setObjectName("actionAuto_Compute_Clipping_Planes")
        self.actionFind_Prims = QtWidgets.QAction(MainWindow)
        self.actionFind_Prims.setObjectName("actionFind_Prims")
        self.actionSelect_Stage_Root = QtWidgets.QAction(MainWindow)
        self.actionSelect_Stage_Root.setObjectName("actionSelect_Stage_Root")
        self.actionDisplay_Camera_Oracles = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Camera_Oracles.setCheckable(True)
        self.actionDisplay_Camera_Oracles.setObjectName("actionDisplay_Camera_Oracles")
        self.actionDisplay_Proxy = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Proxy.setCheckable(True)
        self.actionDisplay_Proxy.setObjectName("actionDisplay_Proxy")
        self.actionAdjust_Default_Material = QtWidgets.QAction(MainWindow)
        self.actionAdjust_Default_Material.setCheckable(True)
        self.actionAdjust_Default_Material.setObjectName("actionAdjust_Default_Material")
        self.actionCameraReticles_Inside = QtWidgets.QAction(MainWindow)
        self.actionCameraReticles_Inside.setCheckable(True)
        self.actionCameraReticles_Inside.setChecked(False)
        self.actionCameraReticles_Inside.setObjectName("actionCameraReticles_Inside")
        self.actionCameraReticles_Outside = QtWidgets.QAction(MainWindow)
        self.actionCameraReticles_Outside.setCheckable(True)
        self.actionCameraReticles_Outside.setChecked(False)
        self.actionCameraReticles_Outside.setObjectName("actionCameraReticles_Outside")
        self.actionCameraReticles_Color = QtWidgets.QAction(MainWindow)
        self.actionCameraReticles_Color.setObjectName("actionCameraReticles_Color")
        self.actionLow = QtWidgets.QAction(MainWindow)
        self.actionLow.setCheckable(True)
        self.actionLow.setObjectName("actionLow")
        self.actionMedium = QtWidgets.QAction(MainWindow)
        self.actionMedium.setCheckable(True)
        self.actionMedium.setObjectName("actionMedium")
        self.actionHigh = QtWidgets.QAction(MainWindow)
        self.actionHigh.setCheckable(True)
        self.actionHigh.setObjectName("actionHigh")
        self.actionVery_High = QtWidgets.QAction(MainWindow)
        self.actionVery_High.setCheckable(True)
        self.actionVery_High.setObjectName("actionVery_High")
        self.actionSelect_Bound_Full_Material = QtWidgets.QAction(MainWindow)
        self.actionSelect_Bound_Full_Material.setObjectName("actionSelect_Bound_Full_Material")
        self.actionSelect_Preview_Binding_Relationship = QtWidgets.QAction(MainWindow)
        self.actionSelect_Preview_Binding_Relationship.setObjectName("actionSelect_Preview_Binding_Relationship")
        self.actionSelect_Full_Binding_Relationship = QtWidgets.QAction(MainWindow)
        self.actionSelect_Full_Binding_Relationship.setObjectName("actionSelect_Full_Binding_Relationship")
        self.actionGroupCameraMask = QtWidgets.QActionGroup(MainWindow)
        self.actionGroupCameraMask.setObjectName("actionGroupCameraMask")
        self.actionCameraMask_Full = QtWidgets.QAction(self.actionGroupCameraMask)
        self.actionCameraMask_Full.setCheckable(True)
        self.actionCameraMask_Full.setChecked(False)
        self.actionCameraMask_Full.setObjectName("actionCameraMask_Full")
        self.actionCameraMask_Partial = QtWidgets.QAction(self.actionGroupCameraMask)
        self.actionCameraMask_Partial.setCheckable(True)
        self.actionCameraMask_Partial.setChecked(False)
        self.actionCameraMask_Partial.setObjectName("actionCameraMask_Partial")
        self.actionCameraMask_None = QtWidgets.QAction(self.actionGroupCameraMask)
        self.actionCameraMask_None.setCheckable(True)
        self.actionCameraMask_None.setChecked(True)
        self.actionCameraMask_None.setObjectName("actionCameraMask_None")
        self.actionCameraMask_Color = QtWidgets.QAction(self.actionGroupCameraMask)
        self.actionCameraMask_Color.setCheckable(False)
        self.actionCameraMask_Color.setObjectName("actionCameraMask_Color")
        self.menuNavigation.addAction(self.actionFind_Prims)
        self.menuNavigation.addAction(self.actionSelect_Stage_Root)
        self.menuNavigation.addAction(self.actionSelect_Model_Root)
        self.menuNavigation.addSeparator()
        self.menuNavigation.addAction(self.actionSelect_Bound_Preview_Material)
        self.menuNavigation.addAction(self.actionSelect_Bound_Full_Material)
        self.menuNavigation.addAction(self.actionSelect_Preview_Binding_Relationship)
        self.menuNavigation.addAction(self.actionSelect_Full_Binding_Relationship)
        self.menuPrim_View_Depth.addAction(self.actionLevel_1)
        self.menuPrim_View_Depth.addAction(self.actionLevel_2)
        self.menuPrim_View_Depth.addAction(self.actionLevel_3)
        self.menuPrim_View_Depth.addAction(self.actionLevel_4)
        self.menuPrim_View_Depth.addAction(self.actionLevel_5)
        self.menuPrim_View_Depth.addAction(self.actionLevel_6)
        self.menuPrim_View_Depth.addAction(self.actionLevel_7)
        self.menuPrim_View_Depth.addAction(self.actionLevel_8)
        self.menuPrim_View_Depth.addSeparator()
        self.menuPrim_View_Depth.addAction(self.actionExpand_All)
        self.menuPrim_View_Depth.addAction(self.actionCollapse_All)
        self.menuShow.addAction(self.menuPrim_View_Depth.menuAction())
        self.menuShow.addSeparator()
        self.menuShow.addAction(self.actionShow_Inactive_Prims)
        self.menuShow.addAction(self.actionShow_All_Master_Prims)
        self.menuShow.addAction(self.actionShow_Undefined_Prims)
        self.menuShow.addAction(self.actionShow_Abstract_Prims)
        self.primViewMenuBar.addAction(self.menuNavigation.menuAction())
        self.primViewMenuBar.addAction(self.menuShow.menuAction())
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionReopen_Stage)
        self.menuFile.addAction(self.actionReload_All_Layers)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Overrides_As)
        self.menuFile.addAction(self.actionSave_Flattened_As)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuEdit.addAction(self.menuInterpolation.menuAction())
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionLoad)
        self.menuEdit.addAction(self.actionUnload)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionActivate)
        self.menuEdit.addAction(self.actionDeactivate)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionMake_Visible)
        self.menuEdit.addAction(self.actionVis_Only)
        self.menuEdit.addAction(self.actionMake_Invisible)
        self.menuEdit.addAction(self.actionRemove_Session_Visibility)
        self.menuEdit.addAction(self.actionReset_All_Session_Visibility)
        self.menuHUD.addAction(self.actionHUD)
        self.menuHUD.addSeparator()
        self.menuHUD.addAction(self.actionHUD_Info)
        self.menuHUD.addAction(self.actionHUD_Complexity)
        self.menuHUD.addAction(self.actionHUD_Performance)
        self.menuHUD.addAction(self.actionHUD_GPUstats)
        self.menuPickMode.addAction(self.actionPick_Prims)
        self.menuPickMode.addAction(self.actionPick_Models)
        self.menuPickMode.addAction(self.actionPick_Instances)
        self.menuHighlightColor.addAction(self.actionSelYellow)
        self.menuHighlightColor.addAction(self.actionSelWhite)
        self.menuHighlightColor.addAction(self.actionSelCyan)
        self.menuSelection_Highlighting.addAction(self.actionNever)
        self.menuSelection_Highlighting.addAction(self.actionOnly_when_paused)
        self.menuSelection_Highlighting.addAction(self.actionAlways)
        self.menuSelection_Highlighting.addAction(self.menuHighlightColor.menuAction())
        self.menuLights.addAction(self.actionAmbient_Only)
        self.menuLights.addAction(self.actionDomeLight)
        self.menuShading_Mode.addAction(self.actionWireframe)
        self.menuShading_Mode.addAction(self.actionWireframeOnSurface)
        self.menuShading_Mode.addAction(self.actionSmooth_Shaded)
        self.menuShading_Mode.addAction(self.actionFlat_Shaded)
        self.menuShading_Mode.addAction(self.actionPoints)
        self.menuShading_Mode.addAction(self.actionGeom_Only)
        self.menuShading_Mode.addAction(self.actionGeom_Smooth)
        self.menuShading_Mode.addAction(self.actionGeom_Flat)
        self.menuShading_Mode.addAction(self.actionHidden_Surface_Wireframe)
        self.menuColorCorrection.addAction(self.actionNoColorCorrection)
        self.menuColorCorrection.addAction(self.actionSRGBColorCorrection)
        self.menuColorCorrection.addAction(self.actionOpenColorIO)
        self.menuBackground_Color.addAction(self.actionBlack)
        self.menuBackground_Color.addAction(self.actionGrey_Dark)
        self.menuBackground_Color.addAction(self.actionGrey_Light)
        self.menuBackground_Color.addAction(self.actionWhite)
        self.menuCamera.addAction(self.actionFreeCam)
        self.menuCamera_Masking.addAction(self.actionCameraMask_Full)
        self.menuCamera_Masking.addAction(self.actionCameraMask_Partial)
        self.menuCamera_Masking.addAction(self.actionCameraMask_None)
        self.menuCamera_Masking.addSeparator()
        self.menuCamera_Masking.addAction(self.actionCameraMask_Color)
        self.menuCamera_Reticles.addAction(self.actionCameraReticles_Inside)
        self.menuCamera_Reticles.addAction(self.actionCameraReticles_Outside)
        self.menuCamera_Reticles.addSeparator()
        self.menuCamera_Reticles.addAction(self.actionCameraReticles_Color)
        self.menuCameraGuides.addAction(self.actionCameraMask_Outline)
        self.menuCameraGuides.addAction(self.actionDisplay_Camera_Oracles)
        self.menuCameraGuides.addAction(self.menuCamera_Masking.menuAction())
        self.menuCameraGuides.addAction(self.menuCamera_Reticles.menuAction())
        self.menuDisplay.addAction(self.actionDisplay_Guide)
        self.menuDisplay.addAction(self.actionDisplay_Proxy)
        self.menuDisplay.addAction(self.actionDisplay_Render)
        self.menuBBox.addAction(self.showBBoxes)
        self.menuBBox.addSeparator()
        self.menuBBox.addAction(self.showAABBox)
        self.menuBBox.addAction(self.showOBBox)
        self.menuBBox.addAction(self.showBBoxPlayback)
        self.menuBBox.addSeparator()
        self.menuBBox.addAction(self.useExtentsHint)
        self.menuComplexity.addAction(self.actionLow)
        self.menuComplexity.addAction(self.actionMedium)
        self.menuComplexity.addAction(self.actionHigh)
        self.menuComplexity.addAction(self.actionVery_High)
        self.menuView.addAction(self.actionToggle_Viewer_Mode)
        self.menuView.addSeparator()
        self.menuView.addAction(self.menuRendererPlugin.menuAction())
        self.menuView.addAction(self.menuRendererSettings.menuAction())
        self.menuView.addAction(self.menuRendererAovs.menuAction())
        self.menuView.addAction(self.actionPause)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionReset_View)
        self.menuView.addAction(self.actionAdjust_FOV)
        self.menuView.addAction(self.actionAuto_Compute_Clipping_Planes)
        self.menuView.addAction(self.actionAdjust_Clipping)
        self.menuView.addAction(self.actionAdjust_Default_Material)
        self.menuView.addAction(self.menuComplexity.menuAction())
        self.menuView.addAction(self.menuBBox.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionToggle_Framed_View)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionFrame_Forward)
        self.menuView.addAction(self.actionFrame_Backwards)
        self.menuView.addSeparator()
        self.menuView.addAction(self.menuShading_Mode.menuAction())
        self.menuView.addAction(self.menuColorCorrection.menuAction())
        self.menuView.addAction(self.menuLights.menuAction())
        self.menuView.addAction(self.menuBackground_Color.menuAction())
        self.menuView.addAction(self.menuCamera.menuAction())
        self.menuView.addAction(self.menuCameraGuides.menuAction())
        self.menuView.addAction(self.menuDisplay.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.menuHUD.menuAction())
        self.menuView.addSeparator()
        self.menuView.addAction(self.menuPickMode.menuAction())
        self.menuView.addAction(self.menuSelection_Highlighting.menuAction())
        self.menuView.addAction(self.actionRollover_Prim_Info)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionEnable_Scene_Materials)
        self.menuView.addAction(self.actionDisplay_PrimId)
        self.menuView.addAction(self.actionCull_Backfaces)
        self.menuWindow.addAction(self.showInterpreter)
        self.menuWindow.addAction(self.showDebugFlags)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())

        self.retranslateUi(MainWindow)
        self.propertyInspector.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QtWidgets.QApplication.translate("MainWindow", "MainWindow", None))
        MainWindow.setProperty("comment", QtWidgets.QApplication.translate("MainWindow", "\n"
"     Copyright 2016 Pixar                                                                   \n"
"                                                                                            \n"
"     Licensed under the Apache License, Version 2.0 (the \"Apache License\")      \n"
"     with the following modification; you may not use this file except in                   \n"
"     compliance with the Apache License and the following modification to it:               \n"
"     Section 6. Trademarks. is deleted and replaced with:                                   \n"
"                                                                                            \n"
"     6. Trademarks. This License does not grant permission to use the trade                 \n"
"        names, trademarks, service marks, or product names of the Licensor                  \n"
"        and its affiliates, except as required to comply with Section 4(c) of               \n"
"        the License and to reproduce the content of the NOTICE file.                        \n"
"                                                                                            \n"
"     You may obtain a copy of the Apache License at                                         \n"
"                                                                                            \n"
"         http://www.apache.org/licenses/LICENSE-2.0                                         \n"
"                                                                                            \n"
"     Unless required by applicable law or agreed to in writing, software                    \n"
"     distributed under the Apache License with the above modification is                    \n"
"     distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY   \n"
"     KIND, either express or implied. See the Apache License for the specific               \n"
"     language governing permissions and limitations under the Apache License.               \n"
"  ", None))
        self.menuNavigation.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Navigation", None))
        self.menuShow.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Show", None))
        self.menuPrim_View_Depth.setTitle(QtWidgets.QApplication.translate("MainWindow", "Prim View Depth", None))
        self.primView.headerItem().setText(0, QtWidgets.QApplication.translate("MainWindow", "Prim Name", None))
        self.primView.headerItem().setText(1, QtWidgets.QApplication.translate("MainWindow", "Type", None))
        self.primView.headerItem().setText(2, QtWidgets.QApplication.translate("MainWindow", "Vis", None))
        self.primView.headerItem().setText(3, QtWidgets.QApplication.translate("MainWindow", "Draw Mode", None))
        self.primLegendQButton.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Prim legend", None))
        self.primLegendQButton.setText(QtWidgets.QApplication.translate("MainWindow", "?", None))
        self.primViewLineEdit.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow", "Search for prim by name", None))
        self.primViewFindNext.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Find and select the next match (looping)", None))
        self.primViewFindNext.setText(QtWidgets.QApplication.translate("MainWindow", "Find Prim", None))
        self.propertyView.headerItem().setText(0, QtWidgets.QApplication.translate("MainWindow", "Type", None))
        self.propertyView.headerItem().setText(1, QtWidgets.QApplication.translate("MainWindow", "Property Name", None))
        self.propertyView.headerItem().setText(2, QtWidgets.QApplication.translate("MainWindow", "Value", None))
        self.propertyLegendQButton.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Property legend", None))
        self.propertyLegendQButton.setText(QtWidgets.QApplication.translate("MainWindow", "?", None))
        self.attrViewLineEdit.setPlaceholderText(QtWidgets.QApplication.translate("MainWindow", "Search for property by name", None))
        self.attrViewFindNext.setText(QtWidgets.QApplication.translate("MainWindow", "Find Prop", None))
        self.propertyInspector.setTabText(self.propertyInspector.indexOf(self.value), QtWidgets.QApplication.translate("MainWindow", "Value", None))
        self.metadataView.horizontalHeaderItem(0).setText(QtWidgets.QApplication.translate("MainWindow", "Field Name", None))
        self.metadataView.horizontalHeaderItem(1).setText(QtWidgets.QApplication.translate("MainWindow", "Value", None))
        self.propertyInspector.setTabText(self.propertyInspector.indexOf(self.metadata), QtWidgets.QApplication.translate("MainWindow", "Meta Data", None))
        self.layerStackView.horizontalHeaderItem(0).setText(QtWidgets.QApplication.translate("MainWindow", "Layer", None))
        self.layerStackView.horizontalHeaderItem(1).setText(QtWidgets.QApplication.translate("MainWindow", "Path", None))
        self.layerStackView.horizontalHeaderItem(2).setText(QtWidgets.QApplication.translate("MainWindow", "Value", None))
        self.propertyInspector.setTabText(self.propertyInspector.indexOf(self.layerstack), QtWidgets.QApplication.translate("MainWindow", "Layer Stack", None))
        self.compositionTreeWidget.headerItem().setText(0, QtWidgets.QApplication.translate("MainWindow", "Layer", None))
        self.compositionTreeWidget.headerItem().setText(1, QtWidgets.QApplication.translate("MainWindow", "Arc Type", None))
        self.compositionTreeWidget.headerItem().setText(2, QtWidgets.QApplication.translate("MainWindow", "Arc Path", None))
        self.compositionTreeWidget.headerItem().setText(3, QtWidgets.QApplication.translate("MainWindow", "Has Spec", None))
        self.propertyInspector.setTabText(self.propertyInspector.indexOf(self.tab), QtWidgets.QApplication.translate("MainWindow", "Composition", None))
        self.stageBegin.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Stage Start Frame", None))
        self.stageBegin.setText(QtWidgets.QApplication.translate("MainWindow", "XXX", None))
        self.rangeBegin.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Playback Start Frame", None))
        self.rangeEnd.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Playback End Frame", None))
        self.stageEnd.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Stage End Frame", None))
        self.stageEnd.setText(QtWidgets.QApplication.translate("MainWindow", "XXX", None))
        self.redrawOnScrub.setToolTip(QtWidgets.QApplication.translate("MainWindow", "If unchecked, the view will only redraw when scrubbing is done", None))
        self.redrawOnScrub.setText(QtWidgets.QApplication.translate("MainWindow", "Redraw On Frame Scrub", None))
        self.stepSizeLabel.setText(QtWidgets.QApplication.translate("MainWindow", "Step Size", None))
        self.stepSize.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Playback Step-size", None))
        self.stepSize.setText(QtWidgets.QApplication.translate("MainWindow", "1.0", None))
        self.playButton.setText(QtWidgets.QApplication.translate("MainWindow", "Play", None))
        self.frameLabel.setText(QtWidgets.QApplication.translate("MainWindow", "Frame:", None))
        self.frameField.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Current Frame", None))
        self.frameField.setText(QtWidgets.QApplication.translate("MainWindow", "1.0", None))
        self.menuFile.setTitle(QtWidgets.QApplication.translate("MainWindow", "&File", None))
        self.menuEdit.setTitle(QtWidgets.QApplication.translate("MainWindow", "&Edit", None))
        self.menuInterpolation.setTitle(QtWidgets.QApplication.translate("MainWindow", "Stage Interpolation", None))
        self.menuView.setTitle(QtWidgets.QApplication.translate("MainWindow", "&View", None))
        self.menuHUD.setTitle(QtWidgets.QApplication.translate("MainWindow", "Heads-Up Display", None))
        self.menuPickMode.setTitle(QtWidgets.QApplication.translate("MainWindow", "Pick mode", None))
        self.menuSelection_Highlighting.setTitle(QtWidgets.QApplication.translate("MainWindow", "Selection Highlighting", None))
        self.menuHighlightColor.setTitle(QtWidgets.QApplication.translate("MainWindow", "Highlight Color", None))
        self.menuLights.setTitle(QtWidgets.QApplication.translate("MainWindow", "Lights", None))
        self.menuShading_Mode.setTitle(QtWidgets.QApplication.translate("MainWindow", "Shading Mode", None))
        self.menuColorCorrection.setTitle(QtWidgets.QApplication.translate("MainWindow", "Color Management", None))
        self.menuBackground_Color.setTitle(QtWidgets.QApplication.translate("MainWindow", "Background Color", None))
        self.menuCamera.setTitle(QtWidgets.QApplication.translate("MainWindow", "Camera", None))
        self.menuCameraGuides.setTitle(QtWidgets.QApplication.translate("MainWindow", "Camera Guides", None))
        self.menuCamera_Masking.setTitle(QtWidgets.QApplication.translate("MainWindow", "Camera Masking", None))
        self.menuCamera_Reticles.setTitle(QtWidgets.QApplication.translate("MainWindow", "Camera Reticles", None))
        self.menuDisplay.setTitle(QtWidgets.QApplication.translate("MainWindow", "Display Purposes", None))
        self.menuBBox.setTitle(QtWidgets.QApplication.translate("MainWindow", "Bounding Box", None))
        self.menuRendererPlugin.setTitle(QtWidgets.QApplication.translate("MainWindow", "Hydra Renderer", None))
        self.menuRendererSettings.setTitle(QtWidgets.QApplication.translate("MainWindow", "Hydra Settings", None))
        self.menuRendererAovs.setTitle(QtWidgets.QApplication.translate("MainWindow", "Hydra AOVs", None))
        self.menuComplexity.setTitle(QtWidgets.QApplication.translate("MainWindow", "Complexity", None))
        self.menuWindow.setTitle(QtWidgets.QApplication.translate("MainWindow", "Window", None))
        self.actionOpen.setText(QtWidgets.QApplication.translate("MainWindow", "Open", None))
        self.actionOpen.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+O", None))
        self.actionQuit.setText(QtWidgets.QApplication.translate("MainWindow", "Quit", None))
        self.actionQuit.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+Q", None))
        self.actionPause.setText(QtWidgets.QApplication.translate("MainWindow", "Pause Render", None))
        self.actionPause.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+P", None))
        self.actionReset_View.setText(QtWidgets.QApplication.translate("MainWindow", "Reset View", None))
        self.actionToggle_Framed_View.setText(QtWidgets.QApplication.translate("MainWindow", "Toggle Framed View", None))
        self.actionToggle_Framed_View.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Toggle camera with view saved before last Frame operation", None))
        self.actionToggle_Framed_View.setShortcut(QtWidgets.QApplication.translate("MainWindow", "J", None))
        self.actionWatch_Window.setText(QtWidgets.QApplication.translate("MainWindow", "Watch Window", None))
        self.actionWatch_Window.setShortcut(QtWidgets.QApplication.translate("MainWindow", "W", None))
        self.actionFrame_Forward.setText(QtWidgets.QApplication.translate("MainWindow", "Frame Forward", None))
        self.actionFrame_Backwards.setText(QtWidgets.QApplication.translate("MainWindow", "Frame Backward", None))
        self.actionAdjust_FOV.setText(QtWidgets.QApplication.translate("MainWindow", "Adjust FO&V...", None))
        self.actionReopen_Stage.setText(QtWidgets.QApplication.translate("MainWindow", "Reopen Stage", None))
        self.actionDump_RIB.setText(QtWidgets.QApplication.translate("MainWindow", "Dump RIB...", None))
        self.actionLevel_1.setText(QtWidgets.QApplication.translate("MainWindow", "Level 1", None))
        self.actionLevel_1.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+1", None))
        self.actionLevel_2.setText(QtWidgets.QApplication.translate("MainWindow", "Level 2", None))
        self.actionLevel_2.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+2", None))
        self.actionLevel_3.setText(QtWidgets.QApplication.translate("MainWindow", "Level 3", None))
        self.actionLevel_3.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+3", None))
        self.actionLevel_4.setText(QtWidgets.QApplication.translate("MainWindow", "Level 4", None))
        self.actionLevel_4.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+4", None))
        self.actionLevel_5.setText(QtWidgets.QApplication.translate("MainWindow", "Level 5", None))
        self.actionLevel_5.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+5", None))
        self.actionExpand_All.setText(QtWidgets.QApplication.translate("MainWindow", "Expand All", None))
        self.actionExpand_All.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+9", None))
        self.actionCollapse_All.setText(QtWidgets.QApplication.translate("MainWindow", "Collapse All", None))
        self.actionCollapse_All.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+0", None))
        self.actionAmbient_Only.setText(QtWidgets.QApplication.translate("MainWindow", "Camera Light", None))
        self.actionDomeLight.setText(QtWidgets.QApplication.translate("MainWindow", "Dome Light", None))
        self.actionLevel_6.setText(QtWidgets.QApplication.translate("MainWindow", "Level 6", None))
        self.actionLevel_6.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+6", None))
        self.actionLevel_7.setText(QtWidgets.QApplication.translate("MainWindow", "Level 7", None))
        self.actionLevel_7.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+7", None))
        self.actionLevel_8.setText(QtWidgets.QApplication.translate("MainWindow", "Level 8", None))
        self.actionLevel_8.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+8", None))
        self.actionWireframe.setText(QtWidgets.QApplication.translate("MainWindow", "Wireframe", None))
        self.actionWireframe.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+0", None))
        self.actionWireframeOnSurface.setText(QtWidgets.QApplication.translate("MainWindow", "WireframeOnSurface", None))
        self.actionWireframeOnSurface.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+1", None))
        self.actionSmooth_Shaded.setText(QtWidgets.QApplication.translate("MainWindow", "Smooth Shaded", None))
        self.actionSmooth_Shaded.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+2", None))
        self.actionFlat_Shaded.setText(QtWidgets.QApplication.translate("MainWindow", "Flat Shaded", None))
        self.actionFlat_Shaded.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+3", None))
        self.actionPoints.setText(QtWidgets.QApplication.translate("MainWindow", "Points", None))
        self.actionPoints.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+4", None))
        self.actionGeom_Only.setText(QtWidgets.QApplication.translate("MainWindow", "Geom Only", None))
        self.actionGeom_Only.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+6", None))
        self.actionRedrawOnScrub.setText(QtWidgets.QApplication.translate("MainWindow", "Redraw While Frame Scrubbing", None))
        self.actionIncrementComplexity1.setText(QtWidgets.QApplication.translate("MainWindow", "IncrementComplexity", None))
        self.actionIncrementComplexity1.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+=", None))
        self.actionDecrementComplexity.setText(QtWidgets.QApplication.translate("MainWindow", "DecrementComplexity", None))
        self.actionDecrementComplexity.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+-", None))
        self.actionPRMan.setText(QtWidgets.QApplication.translate("MainWindow", "Render View", None))
        self.actionPRMan.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+R", None))
        self.actionBlack.setText(QtWidgets.QApplication.translate("MainWindow", "Black", None))
        self.actionWhite.setText(QtWidgets.QApplication.translate("MainWindow", "White", None))
        self.actionGrey_Light.setText(QtWidgets.QApplication.translate("MainWindow", "Grey (Light)", None))
        self.actionGrey_Dark.setText(QtWidgets.QApplication.translate("MainWindow", "Grey (Dark)", None))
        self.actionGeom_Smooth.setText(QtWidgets.QApplication.translate("MainWindow", "Geom Smooth", None))
        self.actionGeom_Smooth.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+7", None))
        self.actionGeom_Flat.setText(QtWidgets.QApplication.translate("MainWindow", "Geom Flat", None))
        self.actionGeom_Flat.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+8", None))
        self.actionHidden_Surface_Wireframe.setText(QtWidgets.QApplication.translate("MainWindow", "Hidden Surface Wireframe", None))
        self.actionHidden_Surface_Wireframe.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+9", None))
        self.actionNoColorCorrection.setText(QtWidgets.QApplication.translate("MainWindow", "disabled", None))
        self.actionSRGBColorCorrection.setText(QtWidgets.QApplication.translate("MainWindow", "sRGB", None))
        self.actionOpenColorIO.setText(QtWidgets.QApplication.translate("MainWindow", "openColorIO", None))
        self.actionFreeCam.setText(QtWidgets.QApplication.translate("MainWindow", "Free Camera", None))
        self.actionSave_Overrides_As.setText(QtWidgets.QApplication.translate("MainWindow", "Save Overrides As...", None))
        self.actionSave_Overrides_As.setIconText(QtWidgets.QApplication.translate("MainWindow", "Save Overrides As...", None))
        self.actionSave_Overrides_As.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Save property and metadata overrides", None))
        self.actionSave_Flattened_As.setText(QtWidgets.QApplication.translate("MainWindow", "Save Flattened As...", None))
        self.actionSave_Flattened_As.setIconText(QtWidgets.QApplication.translate("MainWindow", "Save Flattened As...", None))
        self.actionSave_Flattened_As.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Save a flattened version of the current stage", None))
        self.showInterpreter.setText(QtWidgets.QApplication.translate("MainWindow", "Interpreter", None))
        self.showInterpreter.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Show Python interpreter console", None))
        self.showInterpreter.setShortcut(QtWidgets.QApplication.translate("MainWindow", "I", None))
        self.showDebugFlags.setText(QtWidgets.QApplication.translate("MainWindow", "Debug Flags", None))
        self.showDebugFlags.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Show Debug Flags Window", None))
        self.actionHUD_VBOInfo.setText(QtWidgets.QApplication.translate("MainWindow", "VBO Info (Quads/Tris)", None))
        self.actionHUD_Info.setText(QtWidgets.QApplication.translate("MainWindow", "Subtree Info (Slow)", None))
        self.actionHUD_VBO.setText(QtWidgets.QApplication.translate("MainWindow", "VBO Info", None))
        self.actionHUD_Complexity.setText(QtWidgets.QApplication.translate("MainWindow", "Camera/Complexity", None))
        self.actionHUD_Performance.setText(QtWidgets.QApplication.translate("MainWindow", "Performance", None))
        self.actionHUD_GPUstats.setText(QtWidgets.QApplication.translate("MainWindow", "GPU stats", None))
        self.actionHUD.setText(QtWidgets.QApplication.translate("MainWindow", "Show HUD", None))
        self.actionHUD.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+D", None))
        self.actionCameraMask_Outline.setText(QtWidgets.QApplication.translate("MainWindow", "Camera Frame", None))
        self.actionDisplay_Guide.setText(QtWidgets.QApplication.translate("MainWindow", "Guide", None))
        self.actionDisplay_Render.setText(QtWidgets.QApplication.translate("MainWindow", "Render", None))
        self.actionDisplay_PrimId.setText(QtWidgets.QApplication.translate("MainWindow", "Display Prim Id", None))
        self.actionEnable_Scene_Materials.setText(QtWidgets.QApplication.translate("MainWindow", "Enable Scene Materials", None))
        self.actionShow_Inactive_Prims.setText(QtWidgets.QApplication.translate("MainWindow", "Inactive Prims", None))
        self.showAABBox.setText(QtWidgets.QApplication.translate("MainWindow", "Show Axis-Aligned", None))
        self.showOBBox.setText(QtWidgets.QApplication.translate("MainWindow", "Show Oriented", None))
        self.showBBoxPlayback.setText(QtWidgets.QApplication.translate("MainWindow", "Show During Playback/Scrub", None))
        self.showBBoxes.setText(QtWidgets.QApplication.translate("MainWindow", "Show Bounding Boxes", None))
        self.showBBoxes.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+B", None))
        self.actionVersion_Info.setText(QtWidgets.QApplication.translate("MainWindow", "Version Info", None))
        self.actionVersion_Info.setShortcut(QtWidgets.QApplication.translate("MainWindow", "V", None))
        self.actionAdjust_Clipping.setText(QtWidgets.QApplication.translate("MainWindow", "Adjust Clipping Planes...", None))
        self.actionIncrementComplexity2.setText(QtWidgets.QApplication.translate("MainWindow", "IncrementComplexity", None))
        self.actionIncrementComplexity2.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl++", None))
        self.actionCull_Backfaces.setText(QtWidgets.QApplication.translate("MainWindow", "Cull Backfaces (GL)", None))
        self.actionSave_Overrides_To_Scene.setText(QtWidgets.QApplication.translate("MainWindow", "Save Overrides To Scene", None))
        self.actionMake_Visible.setText(QtWidgets.QApplication.translate("MainWindow", "Make Visible", None))
        self.actionMake_Visible.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Shift+H", None))
        self.actionMake_Invisible.setText(QtWidgets.QApplication.translate("MainWindow", "Make Invisible", None))
        self.actionMake_Invisible.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+H", None))
        self.actionRemove_Session_Visibility.setText(QtWidgets.QApplication.translate("MainWindow", "Remove Session Visibility", None))
        self.actionRemove_Session_Visibility.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+U", None))
        self.actionActivate.setText(QtWidgets.QApplication.translate("MainWindow", "Activate", None))
        self.actionDeactivate.setText(QtWidgets.QApplication.translate("MainWindow", "Deactivate", None))
        self.actionSelect_Model_Root.setText(QtWidgets.QApplication.translate("MainWindow", "Select Enclosing Model", None))
        self.actionSelect_Model_Root.setShortcut(QtWidgets.QApplication.translate("MainWindow", "\\", None))
        self.actionRefresh_Procedurals.setText(QtWidgets.QApplication.translate("MainWindow", "Refresh Procedurals", None))
        self.actionReload_All_Layers.setText(QtWidgets.QApplication.translate("MainWindow", "Reload All Layers", None))
        self.actionReload_All_Layers.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+R", None))
        self.actionHD_Flags.setText(QtWidgets.QApplication.translate("MainWindow", "HD Flags", None))
        self.actionHD_Flags_2.setText(QtWidgets.QApplication.translate("MainWindow", "HD Flags", None))
        self.actionHD_Flags_3.setText(QtWidgets.QApplication.translate("MainWindow", "HD Flags", None))
        self.actionMenu.setText(QtWidgets.QApplication.translate("MainWindow", "Menu", None))
        self.actionSdf.setText(QtWidgets.QApplication.translate("MainWindow", "sdf", None))
        self.actionGeom_Id.setText(QtWidgets.QApplication.translate("MainWindow", "Geom Id", None))
        self.actionShow_All_Master_Prims.setText(QtWidgets.QApplication.translate("MainWindow", "Master Prims", None))
        self.actionShow_Undefined_Prims.setText(QtWidgets.QApplication.translate("MainWindow", "Undefined Prims (Overs)", None))
        self.actionShow_Abstract_Prims.setText(QtWidgets.QApplication.translate("MainWindow", "Abstract Prims (Classes)", None))
        self.actionPick_Prims.setText(QtWidgets.QApplication.translate("MainWindow", "Prims", None))
        self.actionPick_Models.setText(QtWidgets.QApplication.translate("MainWindow", "Models", None))
        self.actionPick_Instances.setText(QtWidgets.QApplication.translate("MainWindow", "Instances", None))
        self.actionToggle_Viewer_Mode.setText(QtWidgets.QApplication.translate("MainWindow", "Toggle Viewer Mode", None))
        self.actionToggle_Viewer_Mode.setShortcut(QtWidgets.QApplication.translate("MainWindow", "F11", None))
        self.useExtentsHint.setText(QtWidgets.QApplication.translate("MainWindow", "Use Extents Hints", None))
        self.actionNever.setText(QtWidgets.QApplication.translate("MainWindow", "Never", None))
        self.actionOnly_when_paused.setText(QtWidgets.QApplication.translate("MainWindow", "Only when paused", None))
        self.actionOnly_when_paused.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Do not draw selection highlights during playback", None))
        self.actionAlways.setText(QtWidgets.QApplication.translate("MainWindow", "Always", None))
        self.actionAlways.setToolTip(QtWidgets.QApplication.translate("MainWindow", "Draw selection highlights even during plaback", None))
        self.actionSelYellow.setText(QtWidgets.QApplication.translate("MainWindow", "Yellow", None))
        self.actionSelWhite.setText(QtWidgets.QApplication.translate("MainWindow", "White", None))
        self.actionSelCyan.setText(QtWidgets.QApplication.translate("MainWindow", "Cyan", None))
        self.actionVis_Only.setText(QtWidgets.QApplication.translate("MainWindow", "Vis Only", None))
        self.actionVis_Only.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Alt+H", None))
        self.actionReset_All_Session_Visibility.setText(QtWidgets.QApplication.translate("MainWindow", "Reset All Session Visibility", None))
        self.actionReset_All_Session_Visibility.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Shift+U", None))
        self.actionLoad.setText(QtWidgets.QApplication.translate("MainWindow", "Load", None))
        self.actionUnload.setText(QtWidgets.QApplication.translate("MainWindow", "Unload", None))
        self.actionSelect_Bound_Preview_Material.setText(QtWidgets.QApplication.translate("MainWindow", "Select Bound Preview Material", None))
        self.actionSelect_Bound_Preview_Material.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Shift+L", None))
        self.actionRollover_Prim_Info.setText(QtWidgets.QApplication.translate("MainWindow", "Rollover Prim Info", None))
        self.actionRollover_Prim_Info.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Shift+I", None))
        self.actionAuto_Compute_Clipping_Planes.setText(QtWidgets.QApplication.translate("MainWindow", "Auto Compute Clipping Planes", None))
        self.actionAuto_Compute_Clipping_Planes.setToolTip(QtWidgets.QApplication.translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; text-decoration: underline;\">Auto Clipping</span></p><p><span style=\" font-weight:400;\">Expansive scenes may show &quot;Z-fighting&quot;, where nearby surfaces pop or shimmer.  </span><span style=\" font-weight:600;\">Auto Compute Clipping Planes</span><span style=\" font-weight:400;\"> adjusts the camera\'s clipping planes to fix this.  When enabled, the </span><span style=\" font-weight:600;\">Frame Selected</span><span style=\" font-weight:400;\"> command readjusts clip planes too.</span></p><p><span style=\" font-weight:400;\">Leaving and then re-entering this mode will reset the view used to optimize the clipping planes.</span></p><p><span style=\" font-weight:400;\">Auto clipping is not useful in all situations, such as animated scenes in which the &quot;extent&quot; of the scene changes over time, and for close-up work.</span></p></body></html>", None))
        self.actionAuto_Compute_Clipping_Planes.setShortcut(QtWidgets.QApplication.translate("MainWindow", "C", None))
        self.actionFind_Prims.setText(QtWidgets.QApplication.translate("MainWindow", "Find Prims", None))
        self.actionFind_Prims.setShortcut(QtWidgets.QApplication.translate("MainWindow", "Ctrl+F", None))
        self.actionSelect_Stage_Root.setText(QtWidgets.QApplication.translate("MainWindow", "Select Stage Root", None))
        self.actionSelect_Stage_Root.setShortcut(QtWidgets.QApplication.translate("MainWindow", "|", None))
        self.actionDisplay_Camera_Oracles.setText(QtWidgets.QApplication.translate("MainWindow", "Camera Oracles", None))
        self.actionDisplay_Proxy.setText(QtWidgets.QApplication.translate("MainWindow", "Proxy", None))
        self.actionAdjust_Default_Material.setText(QtWidgets.QApplication.translate("MainWindow", "Adjust Default Material...", None))
        self.actionCameraReticles_Inside.setText(QtWidgets.QApplication.translate("MainWindow", "Camera Reticles Inside", None))
        self.actionCameraReticles_Outside.setText(QtWidgets.QApplication.translate("MainWindow", "Camera Reticles Outside", None))
        self.actionCameraReticles_Color.setText(QtWidgets.QApplication.translate("MainWindow", "Select Color...", None))
        self.actionLow.setText(QtWidgets.QApplication.translate("MainWindow", "Low", None))
        self.actionMedium.setText(QtWidgets.QApplication.translate("MainWindow", "Medium", None))
        self.actionHigh.setText(QtWidgets.QApplication.translate("MainWindow", "High", None))
        self.actionVery_High.setText(QtWidgets.QApplication.translate("MainWindow", "Very High", None))
        self.actionSelect_Bound_Full_Material.setText(QtWidgets.QApplication.translate("MainWindow", "Select Bound Full Material", None))
        self.actionSelect_Preview_Binding_Relationship.setText(QtWidgets.QApplication.translate("MainWindow", "Select Preview Binding Relationship", None))
        self.actionSelect_Full_Binding_Relationship.setText(QtWidgets.QApplication.translate("MainWindow", "Select Full Binding Relationship", None))
        self.actionCameraMask_Full.setText(QtWidgets.QApplication.translate("MainWindow", "Full Mask", None))
        self.actionCameraMask_Partial.setText(QtWidgets.QApplication.translate("MainWindow", "Partial Mask", None))
        self.actionCameraMask_None.setText(QtWidgets.QApplication.translate("MainWindow", "No Mask", None))
        self.actionCameraMask_Color.setText(QtWidgets.QApplication.translate("MainWindow", "Select Color...", None))

from attributeValueEditor import AttributeValueEditor
from primLegend import PrimLegend
from primTreeWidget import PrimTreeWidget
from propertyLegend import PropertyLegend
from frameSlider import FrameSlider
